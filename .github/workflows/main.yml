name: main
on:
  push:
    branches: [ main ]

concurrency: 
  group: main
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          
      - name: Semistandard
        uses: MP3Martin/semistandard-action@master
        continue-on-error: true
        with:
          args: --fix
          
      - name: delete minified file
        continue-on-error: true
        run: rm source/main.min.js

      # Job for Minify-JS
      - name: Minify-JS Action
        uses: jossydevers/minify-js@v1.0.1
        with:
          directory: 'source/main.js' # (OPTIONAL)
          output: 'source/' # (OPTIONAL)
          
      - name: delete weird file
        continue-on-error: true
        run: rm sourcemain.min.js
          
      # Auto-commit to repository
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Minify-JS : Commit Pipeline'
          branch: ${{ github.ref }}
      
      # embed-code begins
      
      - name: pull changes
        run: git pull origin main
      
      - name: select branch
        run: git checkout main
  
      - name: "Github Repository Metadata"
        uses: varunsridharan/action-repository-meta@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: pull changes
        run: git pull origin main
      
      - name: "Dynamic Template Render"
        uses: varunsridharan/action-dynamic-readme@main
        with:
          files: |
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: copy
        env:
          SRC_FOLDER_PATH: 'source'
          TARGET_BRANCH: 'gh-pages'
        run: |
          files=$(find $SRC_FOLDER_PATH -type f) # get the file list
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch                         # fetch branches
          git checkout $TARGET_BRANCH       # checkout to your branch
          git checkout ${GITHUB_REF##*/} -- $files # copy files from the source branch
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "deploy files"  # commit to the repository (ignore if no modification)
          git push origin $TARGET_BRANCH # push to remote branch
      
      - name: select branch 2
        run: git checkout main
      
      - name: copy2
        env:
          SRC_FOLDER_PATH: 'assets'
          TARGET_BRANCH: 'gh-pages'
        run: |
          files=$(find $SRC_FOLDER_PATH -type f) # get the file list
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git fetch                         # fetch branches
          git checkout $TARGET_BRANCH       # checkout to your branch
          git checkout ${GITHUB_REF##*/} -- $files # copy files from the source branch
          git add -A
          git diff-index --quiet HEAD ||  git commit -am "deploy files"  # commit to the repository (ignore if no modification)
          git push origin $TARGET_BRANCH # push to remote branch
